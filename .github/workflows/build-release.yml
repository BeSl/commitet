name: Build Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Debug environment
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "All files in repository:"
        find . -type f -not -path "./.git/*" | sort
        echo ""
        echo "Checking for gradlew file specifically:"
        find . -name "gradlew" -type f
        echo ""
        echo "Git status:"
        git status --porcelain
    
    - name: Verify gradlew file exists
      run: |
        echo "Checking for gradlew file in root directory:"
        if [ -f "./gradlew" ]; then
          echo "SUCCESS: gradlew file found in root directory"
          ls -la ./gradlew
          echo "File type:"
          file ./gradlew
        else
          echo "ERROR: gradlew file NOT found in root directory"
          echo "Contents of current directory:"
          ls -la
          echo "Searching for gradlew file in all directories:"
          find . -name "gradlew" -type f
          echo "Exiting with error"
          exit 1
        fi
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: |
        echo "Setting execute permissions for gradlew"
        chmod +x ./gradlew
        echo "Permissions after chmod:"
        ls -la ./gradlew
        echo "Trying to execute gradlew directly:"
        if [ -x "./gradlew" ]; then
          echo "gradlew has execute permission"
        else
          echo "ERROR: gradlew does not have execute permission"
        fi
        
    - name: Validate Gradle wrapper
      run: |
        echo "Validating Gradle wrapper..."
        echo "Current directory: $(pwd)"
        echo "gradlew file exists:"
        ls -la ./gradlew
        echo "Attempting to run ./gradlew --version"
        ./gradlew --version
        echo "Gradle wrapper validation completed"
      continue-on-error: true
      
    - name: Build with Gradle
      run: |
        echo "Starting Gradle build..."
        echo "Current directory: $(pwd)"
        echo "gradlew file exists:"
        ls -la ./gradlew
        echo "Attempting to run ./gradlew build -x test --info --stacktrace"
        ./gradlew build -x test --info --stacktrace
        echo "Gradle build completed successfully"
      continue-on-error: true
      
    - name: Final diagnostics
      run: |
        echo "Final diagnostics:"
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        if [ -d "build" ]; then
          echo "Build directory contents:"
          ls -la build/
        else
          echo "No build directory found"
        fi
        
        echo "Checking if JAR files were created:"
        find . -name "*.jar" -type f
        
        echo "Git log (last 5 commits):"
        git log --oneline -5
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
        
    - name: Upload JAR Artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/libs/*.jar
        asset_name: commitet-jm.jar
        asset_content_type: application/java-archive