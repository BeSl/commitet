buildscript {
    ext.kotlin_version = '2.2.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'io.jmix' version '2.5.0'
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
    id 'java'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.9'
}

java {
}

apply plugin: 'org.springframework.boot'
apply plugin: 'kotlin'
apply plugin: 'com.vaadin'

jmix {
    bomVersion = '2.5.0'
}

def getVersionTimestamp = {
    def date = new Date()
    def year = date.format('yyyy')
    def dayOfYear = date.format('D')
    def hour = date.format('HH')
    "${year}.${dayOfYear}.${hour}"
}

group = 'com.besl'
version = getVersionTimestamp()

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
    maven {
        name = 'Central Portal Snapshots'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-flowui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.flowui:jmix-flowui-starter'
    implementation 'io.jmix.flowui:jmix-flowui-data-starter'
    implementation 'io.jmix.flowui:jmix-flowui-themes'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-flowui-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.hsqldb:hsqldb'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.jmix.flowui:jmix-flowui-test-assist'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0"
    implementation 'io.jmix.translations:jmix-translations-ru'
    implementation 'com.vaadin:vaadin-core:24.3.8' // Основная зависимость Vaadin
//    implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
//    implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
    implementation 'io.jmix.quartz:jmix-quartz-starter'
    implementation 'io.jmix.quartz:jmix-quartz-flowui-starter'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}


configurations.implementation {
    exclude group: 'com.vaadin', module: 'hilla'
    exclude group: 'com.vaadin', module: 'hilla-dev'
    exclude group: 'com.vaadin', module: 'copilot'
}

test {
    useJUnitPlatform()
}


idea {
    module {
        excludeDirs.addAll(files('.jmix', 'node_modules', 'src/main/frontend/generated/', 'src/main/bundles'))
    }
}
vaadin {
    optimizeBundle = false
}

// Установка версии Java для компиляции
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Настройка компиляции Kotlin
kotlin {
    jvmToolchain(17)
}
